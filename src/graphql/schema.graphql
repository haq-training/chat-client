# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type FriendRequest {
    message: String
    senderId: Int!
}

type Mutation {
    ChangePassword(input: changePasswordInput!): SuccessResponse!
    addFriend(email: String!): SuccessResponse!
    block_user(id: ID!): SuccessResponse!
    delete_user(id: ID!): SuccessResponse!
    forgot_password(input: ForgotPassword!): SuccessResponse!
    register(input: CreateUserInput!): User!
    unFriend(id: ID!): SuccessResponse!
    unblock_user(id: ID!): SuccessResponse!
    upRoleUser(id: ID!): SuccessResponse!
    updateUser(input: UpdateUserInput!): SuccessResponse!
}

type PageInfo {
    endCursor: Cursor
    hasNextPage: Boolean!
}

type Query {
    listFriend: list_all_friend
    login(input: UserLoginInput!): UserLoginResponse!
    me: User!
    user(id: ID!): User!
    users: [User]
}

type Subscription {
    friendRequestReceived(userId: Int!): FriendRequest
    onlineTracker(userId: Int!): UserOnline!
}

type User {
    avatarUrl: String
    createdAt: Date
    email: String!
    firstName: String!
    id: Int!
    lastName: String!
    location: String
    role: Int!
    status: Boolean
    story: String
    updatedAt: Date
}

type UserLoginResponse {
    token: String!
    user: User!
}

type UserOnline {
    body: String
    id: Int
}

type list_Friend {
    avatarUrl: String
    email: String!
    firstName: String!
    id: Int!
    lastName: String!
    location: String
    status: Boolean
    story: String
}

type list_all_friend {
    block: [list_Friend]
    follower: [list_Friend]
    friend: [list_Friend]
}

enum SuccessResponse {
    success
}

scalar Cursor

scalar Date

scalar JSON

scalar Upload

input CreateUserInput {
    avatarUrl: Upload
    email: String!
    firstName: String!
    lastName: String!
    location: String
    password: String!
    role: Int!
    story: String
}

input ForgotPassword {
    gmail: String!
}

input PaginationInput {
    after: Cursor
    before: Cursor
    first: Int
    last: Int
}

input UpdateUserInput {
    avatar: Upload
    firstName: String
    id: Int!
    lastName: String
    location: String
    story: String
}

input UserLoginInput {
    account: String!
    password: String!
}

input changePasswordInput {
    id: ID!
    new_passWord: String!
    old_passWord: String!
}
